<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>19-2.html</title>
    <style>
      .container {
        max-width: 900px;
        margin-top: 20px;
      }
      table {
        margin-top: 20px;
      }
      .action-buttons button {
        margin-right: 5px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h2 class="text-center">Task Management</h2>

      <form id="form" class="row g-2">
        <input type="hidden" name="courseId" />
        <div class="col-md-3">
          <input type="text" name="content" class="form-control" placeholder="Content" />
        </div>
        <div class="col-md-3">
          <input type="date" name="dueDate" class="form-control" />
        </div>
        <div class="col-md-2">
          <select class="form-select" name="status">
            <option selected>Choose status</option>
            <option value="Pending">Pending</option>
            <option value="Completed">Completed</option>
          </select>
        </div>
        <div class="col-md-3">
          <input type="text" name="assignedTo" class="form-control" placeholder="Username" />
        </div>
        <div class="col-md-1">
          <button type="submit" class="btn btn-primary">Submit</button>
        </div>
      </form>

      <table class="table table-bordered">
        <thead class="table-light">
          <tr>
            <th>#</th>
            <th>Content</th>
            <th>Due date</th>
            <th>Status</th>
            <th>Assigned to</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="tbody"></tbody>
      </table>
    </div>

    <script>
      const courses = [
        {
          id: 1,
          content: 'Learn Javascript Session 01',
          dueDate: '2023-04-17',
          status: 'Pending',
          assignedTo: 'Anh Bách',
        },
        {
          id: 2,
          content: 'Learn Javascript Session 2',
          dueDate: '2023-04-17',
          status: 'Pending',
          assignedTo: 'Lâm th`',
        },
        {
          id: 3,
          content: 'Learn CSS Session 1',
          dueDate: '2023-04-17',
          status: 'Pending',
          assignedTo: 'Hiếu Ci ớt ớt',
        },
      ];

      let tbody = document.getElementById('tbody');
      function showData() {
        tbody.innerHTML = courses
          .map(
            (el, index) => `<tr>
                      <td>${index + 1}</td>
                      <td>${el.content}</td>
                      <td>${el.dueDate}</td>
                      <td>${el.status}</td>
                      <td>${el.assignedTo}</td>
                      <td class="action-buttons">
                        <button class="btn btn-sm btn-secondary" onclick="showEdit(${el.id})">Sửa</button>
                        <button class="btn btn-sm btn-danger" onclick="handleDelete(${el.id})">Xóa</button>
                      </td>
                    </tr>`,
          )
          .join('');
      }

      showData();

      let form = document.getElementById('form');
      form.onsubmit = function (e) {
        e.preventDefault();
        let id = Number(form.courseId.value);
        const index = courses.findIndex((el) => el.id === id);
        if (index !== -1) {
          const newEdit = {
            id: id,
            content: form.content.value,
            dueDate: form.dueDate.value,
            status: form.status.value,
            assignedTo: form.assignedTo.value,
          };

          courses[index] = newEdit;
          const button = form.querySelector('button');
          button.innerText = 'Submit';
          form.courseId.value = '';
        } else {
          const newCourse = {
            id: Math.floor(Math.random() * 10000),
            content: form.content.value,
            dueDate: form.dueDate.value,
            status: form.status.value,
            assignedTo: form.assignedTo.value,
          };
          courses.push(newCourse);
        }

        showData();
        form.reset();
      };

      function handleDelete(id) {
        let index = courses.findIndex((el) => el.id === id);
        if (index !== -1) {
          courses.splice(index, 1);
        } else {
          alert('không tồn tại');
        }
        showData();
      }

      function showEdit(id) {
        let edit = courses.find((el) => el.id === id);
        let button = form.querySelector('button');
        if (edit) {
          form.courseId.value = edit.id;
          form.content.value = edit.content;
          form.dueDate.value = edit.dueDate;
          form.status.value = edit.status;
          form.assignedTo.value = edit.assignedTo;

          button.innerText = 'Update';
        }
      }
    </script>
  </body>
</html>
